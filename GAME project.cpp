#pragma once
#include "Rendering.h"
#include "Organism.h"
#include "Cards.h"

std::vector<std::vector<int>> Labyrinth = {
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 0
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 1
        { 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 2
        { 219, 219, 219, 219,  32,  32,  32,  32,  66,  79,  83,  83,  32,  32,  66,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  70,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 3
        { 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 4
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 5
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 6
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 7
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  70,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 8
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 9
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 10
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 11
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 12
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  70,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219 }, // 13
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  70,  32,  32,  32,  32,  32,  70,  32,  32,  32, 219, 219 }, // 14
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219 }, // 15
        { 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 16
        { 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  70,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 17
        { 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 18
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 19
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 32,  32,   32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 20
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 32,  32,   32,  70,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 21
        { 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 32,  32,   32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 22
        { 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219 }, // 23
        { 219, 219, 219, 219, 219, 219, 219,  32,  32,  83,  84,  65,  82,  84,  33,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  70,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219 }, // 24
        { 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219 }, // 25
        { 219, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219,  32,  32,  32,  32,  32,  32,  32,  32,  32,  32, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 26
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 27
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 28
        { 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219, 219 }, // 32,
};

int main() {
    int Game;
    Hero h1(1000, 1000, 5, 20, 20);
    Cards Card;
    Labyrinth[26][10] = 1;
    std::cout << Labyrinth_drawing(Labyrinth);
    Labyrinth[26][10] = 32;

    do {
        Game = h1.Play(Labyrinth);

        if (Game == -1) {
            Print_you_lose();
            break;
        }
        
        else if (Game == 3) {
            Card = Create_Card();
            Print_Card();
            
            if (Card.Get_Ability_Type() == 0) h1.AddHealth(rand() % 50 + 10);
            if (Card.Get_Ability_Type() == 1) h1.AddProtection(rand() % 10 + 2);
            if (Card.Get_Ability_Type() == 2) h1.AddDamage(rand() % 10 + 2);
            
            if (Card.Get_Ability()) {
                
                int Key = Card.Get_Ability_Type();
                if (Key == 0) {
                    if (!h1.GetFlag_H()) {
                        h1.Install_flag_H(1);
                        Print_New_Ability();
                        Print_Heart();
                    }
                }
                if (Key == 1) {
                    if (!h1.GetFlag_P()) {
                        h1.Install_flag_P(1);
                        Print_New_Ability();
                        Print_Shield();
                    }
                }
                if (Key == 2) {
                    if (!h1.GetFlag_D()) {
                        h1.Install_flag_D(1);
                        Print_New_Ability();
                        Print_Crown();
                    }
                }
                
            }
        }
        else if (Game == 2) {
            Print_you_won();
            break;
        }
    } while (Game);

    system("pause");
}